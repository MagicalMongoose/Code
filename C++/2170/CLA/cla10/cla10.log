Script started on Mon 04 Oct 2021 02:09:28 PM CDT
$ pr -n -t -e4 cla12.log[K[K[Kcc
    1	//FILE: cla12a.cc
    2	//
    3	//This program demonstrates the use of one-dimensional
    4	//arrays.  An array of scores is read, printed, and
    5	//the average of the scores is printed.
    6	
    7	#include <iostream>
    8	#include <fstream>
    9	#include <stdlib.h>  //for the exit() function
   10	
   11	using namespace std;
   12	
   13	//function prototypes
   14	void ReadInScores (int scores[], int& howMany);
   15	float FindAverage(int scores[], int howMany);
   16	
   17	//place the function prototype for PrintScores here
   18	void PrintScores(int scores[], int& howMany);
   19	void AboveAverage(int scores[], int&howMany, double avg);
   20	//place the function prototype for LinearSearch here
   21	int LinearSearch(int scores[], int max, int toFind);
   22	
   23	int main()
   24	{
   25	    const int MAX_SCORES = 30;   //the array has at most 30 entries
   26	    int scores [MAX_SCORES];     //an array of test scores with 30 entries
   27	    int howMany;                 //the actual size of the array
   28	    float averageScore;          //the average of the scores array
   29	
   30	    //activate the function to read the scores
   31	    ReadInScores(scores, howMany);
   32	
   33	    //activate the function to print the scores
   34	    PrintScores(scores, howMany);
   35	
   36	    //Place your activation statement for FindAverage() here
   37	    float avg = FindAverage(scores, howMany);
   38	    cout << "Average: " << avg << endl;
   39	
   40	    //Place your activation statement for AboveAverage() here
   41	    AboveAverage(scores, howMany, avg);
   42	
   43	    //Place your loop for the Linear Search here    
   44	    int testNums[5];
   45	    for (int i = 0; i < 5; i++)
   46	    {
   47	        cout << "Enter number [" << i << "]: ";
   48	        cin >> testNums[i];
   49	    }
   50	    for (int j = 0; j < 5; j++)
   51	    {
   52	        int pos = LinearSearch(scores, MAX_SCORES, testNums[j]);
   53	        if (pos != -1)
   54	        {
   55	            cout << testNums[j] << " found at index " << pos << endl;
   56	        } else {
   57	            cout << testNums[j] << " was not found." << endl;
   58	        } 
   59	    }
   60	
   61	    return 0;
   62	
   63	}
   64	
   65	//Function:  ReadInScores()
   66	//This function reads a set of scores from standard input.
   67	//First the number of scores is read, then the scores.
   68	void ReadInScores (int scores[], int& howMany)
   69	{
   70	    ifstream infile;            //our input file stream
   71	
   72	    //open the file and check for success
   73	    infile.open ("scores.dat");
   74	    if (!infile)
   75	    {
   76	        cout << "Could not open scores.dat!!\n";
   77	        exit(1);
   78	    }
   79	
   80	    //read the number of scores
   81	    infile >> howMany;
   82	
   83	    //now read the scores
   84	    for (int i = 0; i < howMany; i++)
   85	         infile >> scores[i];
   86	}
   87	
   88	//Your PrintScores() function definition should go here
   89	void PrintScores (int scores[], int& howMany)
   90	{
   91	    for (int i = 0; i < howMany; i++)
   92	    {
   93	        cout << "score[" << i << "]: " << scores[i] << endl;
   94	    }
   95	
   96	    
   97	}
   98	
   99	
  100	//Function: FindAverage()
  101	//This function is passed an array of scores and the
  102	//number of scores.  It returns the average of the scores.
  103	float FindAverage(int scores[], int howMany)
  104	{
  105	     float sum = 0;      //holds the sum of all the scores
  106	
  107	     //determine the sum of all of the scores
  108	     for (int i = 0; i < howMany; i++)
  109	          sum = sum + scores[i];
  110	
  111	     //return the average
  112	     return float(sum)/howMany;
  113	}
  114	
  115	//Place your AboveAverage() function definition here
  116	void AboveAverage(int scores[], int& howMany, double avg)
  117	{
  118	    for (int i = 0; i < howMany; i++)
  119	    {
  120	        if (scores[i] >= avg)
  121	        {
  122	            cout << "Above average: " << scores[i] << endl;
  123	        }
  124	    
  125	    }
  126	    
  127	}
  128	
  129	
  130	
  131	//Place your LinearSearch() function definition here
  132	int LinearSearch(int scores[], int max, int ToFind)
  133	{
  134	    for (int i = 0; i < max; i++)
  135	    {
  136	        if (scores[i] == ToFind)
  137	        {
  138	            return i;
  139	        }
  140	        else if (scores[i] == -99)
  141	        {
  142	            return -1;
  143	        }
  144	    }
  145	    return -1;
  146	}
$ c++ cla12.cc
$ a.out
score[0]: 100
score[1]: 78
score[2]: 97
score[3]: 82
score[4]: 55
score[5]: 62
score[6]: 89
score[7]: 73
score[8]: 79
score[9]: 59
Average: 77.4
Above average: 100
Above average: 78
Above average: 97
Above average: 82
Above average: 89
Above average: 79
Enter number [0]: 55
Enter number [1]: 10
Enter number [2]: 59
Enter number [3]: 70
Enter number [4]: -99
55 found at index 4
10 was not found.
59 found at index 9
70 was not found.
-99 was not found.
$ exit
exit

Script done on Mon 04 Oct 2021 02:11:03 PM CDT
